{"version":3,"sources":["../server/app.js"],"names":["db_url","process","env","NODE_ENV","MONGODB_URI","db","index","require","users","app","set","join","__dirname","use","json","urlencoded","extended","static","req","res","next","err","Error","status","locals","message","error","get","render","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAIA,SAAUC,QAAQC,GAAR,CAAYC,QAAZ,IAAwB,YAAzB,GAAyCF,QAAQC,GAAR,CAAYE,WAArD,GAAmE,4BAAhF;AACA,IAAIC,KAAK,oBAAKL,MAAL,CAAT;;AAEA,IAAIM,QAAQC,QAAQ,gBAAR,CAAZ;AACA,IAAIC,QAAQD,QAAQ,gBAAR,CAAZ;;AAEA,IAAIE,MAAM,wBAAV;;AAEA;AACAA,IAAIC,GAAJ,CAAQ,OAAR,EAAiB,eAAKC,IAAL,CAAUC,SAAV,EAAqB,UAArB,CAAjB;AACAH,IAAIC,GAAJ,CAAQ,aAAR,EAAuB,MAAvB;;AAEA;AACA;AACAD,IAAII,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACAJ,IAAII,GAAJ,CAAQ,qBAAWC,IAAX,EAAR;AACAL,IAAII,GAAJ,CAAQ,qBAAWE,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAP,IAAII,GAAJ,CAAQ,6BAAR;AACAJ,IAAII,GAAJ,CAAQ,kBAAQI,MAAR,CAAe,eAAKN,IAAL,CAAUC,SAAV,EAAqB,SAArB,CAAf,CAAR;AACAH,IAAII,GAAJ,CAAQ,kBAAQI,MAAR,CAAe,eAAKN,IAAL,CAAUC,SAAV,EAAqB,eAArB,CAAf,CAAR;;AAEA;AACAH,IAAII,GAAJ,CAAQ,UAACK,GAAD,EAAKC,GAAL,EAASC,IAAT,EAAkB;AACxBF,MAAIb,EAAJ,GAASA,EAAT;AACAe;AACD,CAHD;;AAKAX,IAAII,GAAJ,CAAQ,GAAR,EAAaP,KAAb;AACAG,IAAII,GAAJ,CAAQ,QAAR,EAAkBL,KAAlB;;AAEA;AACAC,IAAII,GAAJ,CAAQ,UAACK,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1B,MAAIC,MAAM,IAAIC,KAAJ,CAAU,WAAV,CAAV;AACAD,MAAIE,MAAJ,GAAa,GAAb;AACAH,OAAKC,GAAL;AACD,CAJD;;AAMA;AACAZ,IAAII,GAAJ,CAAQ,UAACQ,GAAD,EAAMH,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,EAAyB;AAC/B;AACAD,MAAIK,MAAJ,CAAWC,OAAX,GAAqBJ,IAAII,OAAzB;AACAN,MAAIK,MAAJ,CAAWE,KAAX,GAAmBR,IAAIT,GAAJ,CAAQkB,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuCN,GAAvC,GAA6C,EAAhE;;AAEA;AACAF,MAAII,MAAJ,CAAWF,IAAIE,MAAJ,IAAc,GAAzB;AACAJ,MAAIS,MAAJ,CAAW,OAAX;AACD,CARD;;AAUAC,OAAOC,OAAP,GAAiBrB,GAAjB","file":"app.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport favicon from 'serve-favicon';\nimport logger from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\nimport mongo from 'mongodb';\nimport monk from 'monk';\n\nlet db_url = (process.env.NODE_ENV == 'production') ? process.env.MONGODB_URI : 'localhost:27017/lunchabler';\nlet db = monk(db_url);\n\nlet index = require('./routes/index');\nlet users = require('./routes/users');\n\nlet app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, '../views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /app\n//app.use(favicon(path.join(__dirname, 'app', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, '../dist')));\napp.use(express.static(path.join(__dirname, '../app/assets')));\n\n// Make our db accessible to our router\napp.use((req,res,next) => {\n  req.db = db;\n  next();\n});\n\napp.use('/', index);\napp.use('/users', users);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  let err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use((err, req, res, next) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nmodule.exports = app;\n"]}